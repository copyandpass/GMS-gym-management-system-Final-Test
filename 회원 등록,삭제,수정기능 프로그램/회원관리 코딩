import java.util.ArrayList;
import java.util.Scanner;

// 회원 클래스
class Member {
    private String name;
    private int age;
    private String membershipType;

    // 생성자
    public Member(String name, int age, String membershipType) {
        this.name = name;
        this.age = age;
        this.membershipType = membershipType;
    }

    public String getName() {
        return name;
    }

    public void printMemberInfo() {
        System.out.println("이름: " + name + ", 나이: " + age + ", 회원권 종류: " + membershipType);
    }
}

// 체육관 회원 관리 시스템 클래스
public class GymMembershipManagement {
    private ArrayList<Member> members = new ArrayList<>();
    private Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        GymMembershipManagement system = new GymMembershipManagement();
        system.run();
    }

    public void run() {
        while (true) {
            System.out.println("\n=== 회원 관리 시스템 ===");
            System.out.println("1. 회원 등록");
            System.out.println("2. 회원 삭제");
            System.out.println("3. 전체 회원 목록 조회");
            System.out.println("4. 종료");
            System.out.print("선택: ");

            int choice = scanner.nextInt();
            scanner.nextLine(); // 개행 문자 제거

            switch (choice) {
                case 1:
                    addMember();
                    break;
                case 2:
                    deleteMember();
                    break;
                case 3:
                    listMembers();
                    break;
                case 4:
                    System.out.println("프로그램을 종료합니다.");
                    return;
                default:
                    System.out.println("잘못된 선택입니다. 다시 시도해주세요.");
            }
        }
    }

    // 회원 등록
    private void addMember() {
        System.out.print("회원 이름: ");
        String name = scanner.nextLine();
        System.out.print("회원 나이: ");
        int age = scanner.nextInt();
        scanner.nextLine(); // 개행 문자 제거
        System.out.print("회원권 종류 (예: 월회원, 연회원): ");
        String membershipType = scanner.nextLine();

        Member newMember = new Member(name, age, membershipType);
        members.add(newMember);
        System.out.println(name + "님이 성공적으로 등록되었습니다.");
    }

    // 회원 삭제
    private void deleteMember() {
        System.out.print("삭제할 회원 이름: ");
        String name = scanner.nextLine();

        boolean found = false;
        for (int i = 0; i < members.size(); i++) {
            if (members.get(i).getName().equalsIgnoreCase(name)) {
                members.remove(i);
                System.out.println(name + "님이 성공적으로 삭제되었습니다.");
                found = true;
                break;
            }
        }

        if (!found) {
            System.out.println(name + "님을 찾을 수 없습니다.");
        }
    }

    // 전체 회원 목록 조회
    private void listMembers() {
        if (members.isEmpty()) {
            System.out.println("등록된 회원이 없습니다.");
            return;
        }

        System.out.println("\n=== 전체 회원 목록 ===");
        for (Member member : members) {
            member.printMemberInfo();
        }
    }
}
import java.util.ArrayList;
import java.util.Scanner;

// 회원 클래스
class Member {
    private String name;
    private int age;
    private String membershipType;

    // 생성자
    public Member(String name, int age, String membershipType) {
        this.name = name;
        this.age = age;
        this.membershipType = membershipType;
    }

    public String getName() {
        return name;
    }

    public void printMemberInfo() {
        System.out.println("이름: " + name + ", 나이: " + age + ", 회원권 종류: " + membershipType);
    }
}

// 체육관 회원 관리 시스템 클래스
public class GymMembershipManagement {
    private ArrayList<Member> members = new ArrayList<>();
    private Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        GymMembershipManagement system = new GymMembershipManagement();
        system.run();
    }

    public void run() {
        while (true) {
            System.out.println("\n=== 회원 관리 시스템 ===");
            System.out.println("1. 회원 등록");
            System.out.println("2. 회원 삭제");
            System.out.println("3. 전체 회원 목록 조회");
            System.out.println("4. 종료");
            System.out.print("선택: ");

            int choice = scanner.nextInt();
            scanner.nextLine(); // 개행 문자 제거

            switch (choice) {
                case 1:
                    addMember();
                    break;
                case 2:
                    deleteMember();
                    break;
                case 3:
                    listMembers();
                    break;
                case 4:
                    System.out.println("프로그램을 종료합니다.");
                    return;
                default:
                    System.out.println("잘못된 선택입니다. 다시 시도해주세요.");
            }
        }
    }

    // 회원 등록
    private void addMember() {
        System.out.print("회원 이름: ");
        String name = scanner.nextLine();
        System.out.print("회원 나이: ");
        int age = scanner.nextInt();
        scanner.nextLine(); // 개행 문자 제거
        System.out.print("회원권 종류 (예: 월회원, 연회원): ");
        String membershipType = scanner.nextLine();

        Member newMember = new Member(name, age, membershipType);
        members.add(newMember);
        System.out.println(name + "님이 성공적으로 등록되었습니다.");
    }

    // 회원 삭제
    private void deleteMember() {
        System.out.print("삭제할 회원 이름: ");
        String name = scanner.nextLine();

        boolean found = false;
        for (int i = 0; i < members.size(); i++) {
            if (members.get(i).getName().equalsIgnoreCase(name)) {
                members.remove(i);
                System.out.println(name + "님이 성공적으로 삭제되었습니다.");
                found = true;
                break;
            }
        }

        if (!found) {
            System.out.println(name + "님을 찾을 수 없습니다.");
        }
    }

    // 전체 회원 목록 조회
    private void listMembers() {
        if (members.isEmpty()) {
            System.out.println("등록된 회원이 없습니다.");
            return;
        }

        System.out.println("\n=== 전체 회원 목록 ===");
        for (Member member : members) {
            member.printMemberInfo();
        }
    }
}
// GUI 기능 확장 필요.